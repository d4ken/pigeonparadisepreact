/* 前回のCSSをここに貼り付け */
body {
  font-family: Arial, sans-serif;
  text-align: center;
}
#game-container {
  display: flex;
  justify-content: space-around;
}
#upgrades,
#achievements {
  text-align: left;
}

:root {
  --primary-color: #6c5ce7;
  --score-color: #1a0b88;
  --secondary-color: #a29bfe;
  --background-color: #f0f3f7;
  --text-color: #2d3436;
  --card-bg-color: #ffffff;
}

body {
  font-family: "Poppins", sans-serif;
  background-color: var(--background-color);
  color: var(--text-color);
  margin: 0;
  padding: 20px;
  line-height: 1.6;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}

h1,
h2 {
  color: var(--primary-color);
  text-align: center;
}

#game-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 20px;
  margin-top: 30px;
}

.card {
  background-color: var(--card-bg-color);
  border-radius: 10px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  padding: 20px;
  transition: transform 0.3s ease;
}

.card:hover {
  transform: translateY(-5px);
}

#click-button {
  background-color: var(--primary-color);
  color: white;
  border: none;
  padding: 15px 30px;
  font-size: 18px;
  border-radius: 30px;
  cursor: pointer;
  transition: background-color 0.3s ease;
  display: block;
  margin: 20px auto;
}

#click-fever {
  background-color: var(--primary-color);
  color: white;
  border: none;
  padding: 15px 30px;
  font-size: 18px;
  border-radius: 30px;
  cursor: pointer;
  transition: background-color 0.3s ease;
  display: block;
  margin: 20px auto;
}

#click-button:hover {
  background-color: var(--secondary-color);
}

#click-fever:hover {
  background-color: var(--secondary-color);
}

.upgrade-item,
.achievement-item {
  background-color: #f8f9fa;
  border-radius: 5px;
  padding: 10px;
  margin-bottom: 10px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.upgrade-item button {
  background-color: var(--secondary-color);
  color: white;
  border: none;
  padding: 5px 10px;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.upgrade-item button:hover {
  background-color: var(--primary-color);
}

.achievement-item.achieved {
  background-color: #d4edda;
  color: #155724;
}

#hato-power {
  font-size: 24px;
  font-weight: bold;
  color: var(--primary-color);
}

/* 新しいスタイルを追加 */
#pigeon-container {
  position: relative;
  height: 450px;
  overflow: hidden;
  background-image: url("./img/background.jpg");
  z-index: 10;
  background-size: cover;
}

/* 鳩の画像用のスタイルを変更 */
.pigeon {
  position: absolute;
  width: 60px;
  height: 60px;
  background-image: url("./img/image1.png");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  transition: transform 0.4s ease;
}

.flying {
  animation: fly 0.5s ease-in-out;
}

@keyframes fly {
  0% {
    transform: translateY(0) rotate(0deg);
  }
  25% {
    transform: translateY(-20px) rotate(-5deg);
  }
  75% {
    transform: translateY(-20px) rotate(5deg);
  }
  100% {
    transform: translateY(0) rotate(0deg);
  }
}

.power-up {
  position: absolute;
  font-size: 24px;
  font-weight: bold;
  color: var(--score-color);
  animation: float-up 1s ease-out;
  pointer-events: none;
}

@keyframes float-up {
  0% {
    opacity: 1;
    transform: translateY(0);
  }
  100% {
    opacity: 0.5;
    transform: translateY(-30px);
  }
}

.feed {
  position: absolute;
  width: 10px;
  height: 10px;
  background-color: #ffeaa7;
  border-radius: 50%;
  animation: fall 1s linear;
}

@keyframes fall {
  0% {
    transform: translateY(-50px);
  }
  100% {
    transform: translateY(350px);
  }
}

.achieved::after {
  content: "clear";
  margin-left: 5px;
  color: #fff;
  background: red;
  padding: 1px 3px;
  font-size: 12px;
}

.buy-button {
  appearance: none;
  border: 0;
  border-radius: 5px;
  background: #4676d7;
  color: #fff;
  font-weight: 600;
  padding: 4px 16px;
  font-size: 12px;
}

.bgm-area {
  display: flex;
  justify-content: center;
}

@keyframes rotate_anime {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.rotate_roop {
  animation: rotate_anime 1s infinite;
}
